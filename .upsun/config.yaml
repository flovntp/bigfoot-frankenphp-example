routes:
    "https://{all}/": { type: upstream, upstream: "app:http" }
    "http://{all}/": { type: redirect, to: "https://{all}/" }

services: 
    database:
        type: postgresql:15

    

applications:
    app:
        source:
            root: "/"

        type: php:8.3

        dependencies:
            php:
                composer/composer: "^2"

        runtime:
            extensions:
                - apcu
                - blackfire
                - ctype
                - iconv
                - mbstring
                - pdo_pgsql
                - sodium
                - xsl
                

        variables:
            php:
                opcache.preload: config/preload.php
        build:
            flavor: none

        web:
            locations:
                "/":
                    root: "public"
                    expires: 1h
                    passthru: "/index.php"

            upstream:
                socket_family: tcp # important for PHP we default to unix sockets
                protocol: http
            commands:
                start: ./frankenphp php-server --listen=localhost:80

        mounts:
            "/var": { source: storage, source_path: var }
            ".local": {source: storage, source_path: caddy-local}

        relationships:
            database: "database:postgresql"
            
        hooks:
            build: |
                set -x -e
                

#                curl -fs https://get.symfony.com/cloud/configurator | bash
#
#                NODE_VERSION=18 symfony-build
                
                export VERSION=$(curl --silent "https://api.github.com/repos/dunglas/frankenphp/tags" | jq -r '.[0].name')
                wget https://github.com/dunglas/frankenphp/releases/download/$VERSION/frankenphp-linux-x86_64
                mv frankenphp-linux-x86_64 frankenphp
                chmod +x frankenphp

            deploy: |
                set -x -e

#                symfony-deploy

        crons:
            security-check:
                # Check that no security issues have been found for PHP packages deployed in production
                # See https://github.com/fabpot/local-php-security-checker
                spec: '50 23 * * *'
                cmd: if [ "$PLATFORM_ENVIRONMENT_TYPE" = "production" ]; then croncape php-security-checker; fi

        
